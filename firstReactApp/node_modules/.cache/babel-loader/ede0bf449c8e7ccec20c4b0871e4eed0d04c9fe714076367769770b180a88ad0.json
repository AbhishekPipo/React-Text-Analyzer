{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Documents/PaceWisdom/ReactProjects/harryProject/firstReactApp/src/App.js\",\n  _s = $RefreshSig$();\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"dark\"); //tells whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({});\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"gray\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n\n    // setMode(mode===\"light\"? \"dark\"  document.body.Style.backgroundColor=\"black\" : \"light\"  document.body.Style.backgroundColor=\"black\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"AbhiTextUtils\",\n      aboutText: \"About Us\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"This is Message Alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter text here to analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9euTMeXml/0w6B+p2cMZGPZXrPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["type","Alert","Navbar","TextForm","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["/home/abhishek/Documents/PaceWisdom/ReactProjects/harryProject/firstReactApp/src/App.js"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\n\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nfunction App() {\n  const [mode, setMode]=useState(\"dark\")//tells whether dark mode is enabled or not\n  \n  const [alert, setAlert] = useState(null)\n  const showAlert=(message, type)=>{\n\n    setAlert({})\n  }\n  const toggleMode= () =>{\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"gray\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n    \n    // setMode(mode===\"light\"? \"dark\"  document.body.Style.backgroundColor=\"black\" : \"light\"  document.body.Style.backgroundColor=\"black\")\n   \n  }\n  \n\n  return (\n    <>\n      <Navbar title=\"AbhiTextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n      <Alert  message=\"This is Message Alert\" ></Alert>\n      \n      <div className=\"container my-3\">\n        <TextForm heading=\"Enter text here to analyze\"></TextForm>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,uCAAuC;AAC5D,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAExC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACR,QAAQ,CAAC,MAAM,CAAC;;EAEtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMW,SAAS,GAACA,CAACC,OAAO,EAAEhB,IAAI,KAAG;IAE/Bc,QAAQ,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;EACD,MAAMG,UAAU,GAAEA,CAAA,KAAK;IACrB,IAAIN,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfM,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;IAC9C,CAAC,MAAM;MACLT,OAAO,CAAC,OAAO,CAAC;MAChBM,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C;;IAEA;EAEF,CAAC;;EAGD,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA,CAACJ,MAAM;MAACqB,KAAK,EAAC,eAAe;MAACC,SAAS,EAAC,UAAU;MAACb,IAAI,EAAEA,IAAK;MAACM,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACzFtB,OAAA,CAACL,KAAK;MAAEe,OAAO,EAAC;IAAuB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eAEjDtB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC7BhB,OAAA,CAACH,QAAQ;QAAC2B,OAAO,EAAC;MAA4B;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAY;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD;EAAA,gBACL;AAEP;AAAClB,EAAA,CAhCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}