{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Documents/PaceWisdom/ReactProjects/harryProject/firstReactApp/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react'; //usestate will help to make new state *variable* and *setstate fun*\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextForm = props => {\n  _s();\n  //props is used to pass values fromm app.js to components\n  const handleUpClick = () => {\n    console.log(\"uppper case was clicked \" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = e => {\n    console.log(\"on changed clicked\");\n    setText(e.target.value); //on change text was the value of text area, which is here set to text means we are updatingf  the text comes from textarea value\n  };\n\n  const [text, setText] = useState('enter text here'); //text is a variable, set text is a function used to update texxt variable, in react you cant update variable directly you have to use function  to update varible \n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          onChange: handleOnChange,\n          id: \"myBox\",\n          value: text,\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Convert To UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", text.split(\" \").length, \" Words, \", text.length, \" \", \" Charecters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_s(TextForm, \"g/sAwTOqEeaKFmTu9AnQbDJpIjE=\");\n_c = TextForm;\nexport default TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","console","log","text","newText","toUpperCase","setText","handleOnChange","e","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["/home/abhishek/Documents/PaceWisdom/ReactProjects/harryProject/firstReactApp/src/components/TextForm.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'  //usestate will help to make new state *variable* and *setstate fun*\n\n\nconst TextForm = (props) => { //props is used to pass values fromm app.js to components\nconst handleUpClick=()=>{\n console.log(\"uppper case was clicked \" + text);\n\n let newText=text.toUpperCase();\n setText(newText);\n}\nconst handleOnChange=(e)=>{\n    console.log(\"on changed clicked\");\n    setText(e.target.value); //on change text was the value of text area, which is here set to text means we are updatingf  the text comes from textarea value\n   }\n\n    const [text, setText]= useState('enter text here'); //text is a variable, set text is a function used to update texxt variable, in react you cant update variable directly you have to use function  to update varible \n  return (\n    <>\n    <div className=\"container\">\n    <h1>\n    {props.heading} \n    </h1>\n    <div className=\"form-group\">\n\n    {/* on change will help us to enter text dynamically */}\n    <textarea className=\"form-control\" onChange={handleOnChange}  id=\"myBox\" value={text} rows=\"10\"></textarea>\n  </div>\n{/* onclick the text value gathered from onchange funtion will be converted to uppercase using newText varible and that newtext varible set to the text variable */}\n    <button className=\"btn btn-primary\" onClick={handleUpClick}  >Convert To UpperCase</button>\n\n  </div> \n  <div className=\"container my-2\">\n    <h1>Your Text Summary</h1>\n    <p> {text.split(\" \").length} Words, {text.length} {/* To find the number of charecters we use * text.lenth here */} Charecters</p>\n    \n  </div>\n\n  </>\n  )\n} \n   \nexport default TextForm"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO,EAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAAE;EAC9B,MAAMC,aAAa,GAACA,CAAA,KAAI;IACvBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,GAAGC,IAAI,CAAC;IAE9C,IAAIC,OAAO,GAACD,IAAI,CAACE,WAAW,EAAE;IAC9BC,OAAO,CAACF,OAAO,CAAC;EACjB,CAAC;EACD,MAAMG,cAAc,GAAEC,CAAC,IAAG;IACtBP,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjCI,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;;EAEA,MAAM,CAACP,IAAI,EAAEG,OAAO,CAAC,GAAEd,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;EACtD,oBACEE,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACAjB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBAC1BjB,OAAA;QAAAiB,QAAA,EACCb,KAAK,CAACe;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,eACLvB,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAD,QAAA,eAG3BjB,OAAA;UAAUkB,SAAS,EAAC,cAAc;UAACM,QAAQ,EAAEX,cAAe;UAAEY,EAAE,EAAC,OAAO;UAACT,KAAK,EAAEP,IAAK;UAACiB,IAAI,EAAC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAY;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvG,eAEJvB,OAAA;QAAQkB,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAErB,aAAc;QAAAW,QAAA,EAAG;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvF,eACNvB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BjB,OAAA;QAAAiB,QAAA,EAAI;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC1BvB,OAAA;QAAAiB,QAAA,GAAG,GAAC,EAACR,IAAI,CAACmB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,UAAQ,EAACpB,IAAI,CAACoB,MAAM,EAAC,GAAC,EAAiE,aAAW;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE9H;EAAA,gBAEH;AAEL,CAAC;AAAAlB,EAAA,CApCKF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAsCd,eAAeA,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}